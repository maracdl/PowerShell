Linux
https://www.computerhope.com/unix/sudo.htm

Programmin/OO
Object Oriented programming is a programming style which is associated with the concepts like class, object, Inheritance, Encapsulation, Abstraction, Polymorphism.

1. Class
A class is a collection of method and variables. It is a blueprint that defines the data and behavior of a type.
We can define a class using the class keyword and the class body enclosed by a pair of curly braces, as shown in the following example:
public class humanBeing
{
  // declare field properties, event, delegate, and method
}

2. Inheritance
Inheritance is a feature of object-oriented programming that allows code reusability when a class includes property of another class. Considering HumanBeing a class, which has properties like hands, legs, eyes, mouth, etc, and functions like walk, talk, eat, see etc.

3. Objects
My name is Yann, and I am an instance/object of class Man. When we say, Human Being, Man or Woman, we just mean a kind, you, your friend, and I. We are the forms of these classes. We have a physical existence while a class is just a logical definition. We are the objects.
The syntax for creating an object of a class Man:
Man Yann = new Man();

4. Abstraction
Abstraction means, showcasing only the required things to the outside world while hiding the details. 
The concept of abstraction focuses on what an object does, instated of how an object is represented or “how it works.” Thus, data abstraction is often used for managing large and complex programs.

5. Encapsulation
Encapsulation means that we want to hide unnecessary details from the user. For example, when we call from our mobile phone, we select the number and press call button. But the entire process of calling or what happens from the moment we press or touch the call button to the moment we start having a phone conversation is hidden from us.

6. Polymorphism
Polymorphism is a concept, which allows us to redefine the way something works, by either changing how it is done or by changing the parts used to get it done. This can be done in two ways, overloading and overriding.

Database/SQL Structured Query Language
Relational Databases
A relational database at its simplest is a set of tables used for storing data. Each table has a unique name and may relate to one or more other tables in the database through common values.

Primary Keys
Most tables have a column or group of columns that can be used to identify records. For example, an Employees table might have a column called EmployeeID that is unique for every row. This makes it easy to keep track of a record over time and to associate a record with records in other tables.

Foreign Keys
Foreign key columns are columns that link to primary key columns in other tables, thereby creating a relationship. For example, the Customers table might have a foreign key column called SalesRep that links to EmployeeID, the primary key in the Employees table.

Relational Database Management System
A Relational Database Management System (RDBMS), commonly (but incorrectly) called a database, is software for creating, manipulating, and administering a database. For simplicity, we will often refer to RDBMSs as databases.

Basic Commands
The commands are CREATE, ALTER, DROP, RENAME, and TRUNCATE. Data Manipulation Language (DML) - These SQL commands are used for storing, retrieving, modifying, and deleting data. These Data Manipulation Language commands are: SELECT, INSERT, UPDATE, and DELETE.

Cloud Computing
Simply put, cloud computing is the delivery of computing services—including servers, storage, databases, networking, software, analytics, and intelligence—over the Internet (“the cloud”) to offer faster innovation, flexible resources, and economies of scale. You typically pay only for cloud services you use, helping you lower your operating costs, run your infrastructure more efficiently, and scale as your business needs change.

Top benefits of cloud computing
Cost, global scale, speed, productivity, performance, security and reliability

Types of cloud computing
Public, private, hybrid

Types of cloud services
Infrastructure as a service (IaaS), Platform as a service (PaaS), Serverless computing, Software as a service (SaaS)

Web technologies include the following
Mark-up languages, such as HTML, CSS, XML, CGI, and HTTP (Front-end or Client-side technologies)
Programming languages and technologies that help create applications for the web. Some of these are Perl, C#, Java, Visual Basic, and .NET (Back-end or Server-side technologies)
Web server and server technologies that enable request handling on a network, where different users have to share the same resources and communicate with each other
Databases, which are extremely important for data and information storage on a computer network
Business applications that are customized for specific execution of tasks on a network